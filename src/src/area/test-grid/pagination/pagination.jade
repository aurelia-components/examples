template
  div.container
    div.card
      div.card-header
        h3 Pagination 
      div.card-block
        div
          p To make the grid pagable simply add the respective attribute
          p Usage:
            code.language-js &lt;grid pagable.bind="true"&gt;&lt;/grid&gt;
        br
        p You can customize the pager using the following attributes (note that if the pagable is false the attributes below are ignored)
        ul 
          li Setting an initial page size
            p Usage:
              code.language-js &lt;grid page-size="200"&gt;&lt;/grid&gt;
          li Setting visible page buttons count of the pager
            p Usage:
              code.language-js &lt;grid pager-size.bind="10"&gt;&lt;/grid&gt;
          li Setting first and last page buttons visibility
            p Usage:
              code.language-js &lt;grid show-first-last-buttons.bind="false"&gt;&lt;/grid&gt;
          li Setting pager jump buttons visibility
             p Usage:
              code.language-js &lt;grid show-jump-buttons.bind="false"&gt;&lt;/grid&gt;
          li Setting items shown summary visibility
              p Usage:
                code.language-js &lt;grid show-paging-summary.bind="false"&gt;&lt;/grid&gt;

        button(click.trigger="addItem()") Add item

        button(click.trigger="changeItem()") change item

        grid(data.bind="data", height="150", style="width: 900px", pageable.bind="true" page.bind="5")
          grid-row
            grid-col(heading="ID", field="id", width="200", filter="input")
              | This is a
              i column template
              | : 
              strong ${ $item.id }

            grid-col(heading="Name", field="name")
              button.btn.btn-primary(click.delegate="itemClicked($item)")
                | Click me I'm ... ${ $item.name }!

            grid-col(heading="Test", field="name")
              a(href="#") Jump to somewhere
